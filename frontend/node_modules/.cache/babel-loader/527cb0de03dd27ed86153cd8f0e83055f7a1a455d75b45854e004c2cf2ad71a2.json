{"ast":null,"code":"var _jsxFileName = \"D:\\\\Property-chatbot\\\\Frontend\\\\src\\\\components\\\\ChatContainer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ChatBox from \"./ChatBox\";\nimport PropertyCard from \"./PropertyCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async text => {\n    const userMsg = {\n      type: \"user\",\n      text\n    };\n    setMessages(prev => [...prev, userMsg]);\n    try {\n      const res = await axios.post(\"http://localhost:5000/query\", {\n        query: text\n      });\n      const botMsg = {\n        type: \"bot\",\n        text: res.data.summary,\n        properties: res.data.properties\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch (err) {\n      const errorMsg = {\n        type: \"bot\",\n        text: \"Error connecting to server.\"\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: messages.map((msg, i) => {\n        var _msg$properties;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.type === \"user\" ? \"text-right mb-2\" : \"text-left mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.type === \"user\" ? \"inline-block bg-blue-100 text-blue-900 px-3 py-2 rounded\" : \"inline-block bg-gray-100 text-gray-900 px-3 py-2 rounded\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), msg.type === \"bot\" && ((_msg$properties = msg.properties) === null || _msg$properties === void 0 ? void 0 : _msg$properties.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: msg.properties.map((p, idx) => /*#__PURE__*/_jsxDEV(PropertyCard, {\n              property: p\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      onSend: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContainer, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = ChatContainer;\nexport default ChatContainer;\nvar _c;\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"names":["React","useState","ChatBox","PropertyCard","axios","jsxDEV","_jsxDEV","ChatContainer","_s","messages","setMessages","sendMessage","text","userMsg","type","prev","res","post","query","botMsg","data","summary","properties","err","errorMsg","className","children","map","msg","i","_msg$properties","fileName","_jsxFileName","lineNumber","columnNumber","length","p","idx","property","onSend","_c","$RefreshReg$"],"sources":["D:/Property-chatbot/Frontend/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport PropertyCard from \"./PropertyCard\";\r\nimport axios from \"axios\";\r\n\r\nconst ChatContainer = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const sendMessage = async (text) => {\r\n    const userMsg = { type: \"user\", text };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/query\", { query: text });\r\n      const botMsg = { type: \"bot\", text: res.data.summary, properties: res.data.properties };\r\n      setMessages((prev) => [...prev, botMsg]);\r\n    } catch (err) {\r\n      const errorMsg = { type: \"bot\", text: \"Error connecting to server.\" };\r\n      setMessages((prev) => [...prev, errorMsg]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10\">\r\n      <div className=\"mb-4\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={msg.type === \"user\" ? \"text-right mb-2\" : \"text-left mb-2\"}>\r\n            <div className={msg.type === \"user\" ? \"inline-block bg-blue-100 text-blue-900 px-3 py-2 rounded\" : \"inline-block bg-gray-100 text-gray-900 px-3 py-2 rounded\"}>\r\n              {msg.text}\r\n            </div>\r\n            {msg.type === \"bot\" && msg.properties?.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                {msg.properties.map((p, idx) => (\r\n                  <PropertyCard key={idx} property={p} />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <ChatBox onSend={sendMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEF;IAAK,CAAC;IACtCF,WAAW,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,OAAO,CAAC,CAAC;IAEzC,IAAI;MACF,MAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,6BAA6B,EAAE;QAAEC,KAAK,EAAEN;MAAK,CAAC,CAAC;MAC5E,MAAMO,MAAM,GAAG;QAAEL,IAAI,EAAE,KAAK;QAAEF,IAAI,EAAEI,GAAG,CAACI,IAAI,CAACC,OAAO;QAAEC,UAAU,EAAEN,GAAG,CAACI,IAAI,CAACE;MAAW,CAAC;MACvFZ,WAAW,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEI,MAAM,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,MAAMC,QAAQ,GAAG;QAAEV,IAAI,EAAE,KAAK;QAAEF,IAAI,EAAE;MAA8B,CAAC;MACrEF,WAAW,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAES,QAAQ,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCpB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBjB,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC;QAAA,IAAAC,eAAA;QAAA,oBACnBxB,OAAA;UAAamB,SAAS,EAAEG,GAAG,CAACd,IAAI,KAAK,MAAM,GAAG,iBAAiB,GAAG,gBAAiB;UAAAY,QAAA,gBACjFpB,OAAA;YAAKmB,SAAS,EAAEG,GAAG,CAACd,IAAI,KAAK,MAAM,GAAG,0DAA0D,GAAG,0DAA2D;YAAAY,QAAA,EAC3JE,GAAG,CAAChB;UAAI;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EACLN,GAAG,CAACd,IAAI,KAAK,KAAK,IAAI,EAAAgB,eAAA,GAAAF,GAAG,CAACN,UAAU,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,IAAG,CAAC,iBAC/C7B,OAAA;YAAKmB,SAAS,EAAC,MAAM;YAAAC,QAAA,EAClBE,GAAG,CAACN,UAAU,CAACK,GAAG,CAAC,CAACS,CAAC,EAAEC,GAAG,kBACzB/B,OAAA,CAACH,YAAY;cAAWmC,QAAQ,EAAEF;YAAE,GAAjBC,GAAG;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAgB,CACvC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA,GAVOL,CAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWN,CAAC;MAAA,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5B,OAAA,CAACJ,OAAO;MAACqC,MAAM,EAAE5B;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCID,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}