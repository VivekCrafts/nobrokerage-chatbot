{"ast":null,"code":"var _jsxFileName = \"D:\\\\Property-chatbot\\\\Frontend\\\\src\\\\pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ChatBox from \"../components/ChatBox\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hi ðŸ‘‹! I can help you find properties. Try: '3BHK flat in Pune under 1Cr'\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Add user message\n    const newMessages = [...messages, {\n      sender: \"user\",\n      text: input\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\"}/api/chat`, {\n        query: input\n      });\n\n      // Backend returns an array of {property, summary}\n      const replies = res.data;\n      if (!Array.isArray(replies) || replies.length === 0) {\n        setMessages([...newMessages, {\n          sender: \"bot\",\n          text: \"No matching properties found.\"\n        }]);\n        return;\n      }\n\n      // Combine summaries into a single text\n      const botReply = replies.map(r => r.summary).join(\"\\n\\n\");\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: botReply\n      }]);\n    } catch (err) {\n      console.error(err);\n      setMessages([...newMessages, {\n        sender: \"bot\",\n        text: \"Error connecting to backend ðŸ˜¢\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"700px\",\n      margin: \"0 auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your query...\",\n        style: {\n          padding: \"10px\",\n          flex: 1,\n          borderRadius: \"4px\",\n          border: \"1px solid #ccc\"\n        },\n        onKeyPress: e => {\n          if (e.key === \"Enter\") sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: \"10px 15px\",\n          marginLeft: \"10px\",\n          backgroundColor: \"#007bff\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"T3iSsDMnNybFIBVTLkXXnHz6rCw=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","ChatBox","axios","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","sender","text","input","setInput","sendMessage","trim","newMessages","res","post","process","env","REACT_APP_API_BASE_URL","query","replies","data","Array","isArray","length","botReply","map","r","summary","join","err","console","error","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","marginTop","type","value","onChange","e","target","placeholder","flex","borderRadius","border","onKeyPress","key","onClick","marginLeft","backgroundColor","color","cursor","_c","$RefreshReg$"],"sources":["D:/Property-chatbot/Frontend/src/pages/ChatPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ChatBox from \"../components/ChatBox\";\r\nimport axios from \"axios\";\r\n\r\nconst ChatPage = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      sender: \"bot\",\r\n      text: \"Hi ðŸ‘‹! I can help you find properties. Try: '3BHK flat in Pune under 1Cr'\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    // Add user message\r\n    const newMessages = [...messages, { sender: \"user\", text: input }];\r\n    setMessages(newMessages);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        `${process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\"}/api/chat`,\r\n        { query: input }\r\n      );\r\n\r\n      // Backend returns an array of {property, summary}\r\n      const replies = res.data;\r\n\r\n      if (!Array.isArray(replies) || replies.length === 0) {\r\n        setMessages([\r\n          ...newMessages,\r\n          { sender: \"bot\", text: \"No matching properties found.\" },\r\n        ]);\r\n        return;\r\n      }\r\n\r\n      // Combine summaries into a single text\r\n      const botReply = replies.map((r) => r.summary).join(\"\\n\\n\");\r\n\r\n      setMessages([...newMessages, { sender: \"bot\", text: botReply }]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessages([\r\n        ...newMessages,\r\n        { sender: \"bot\", text: \"Error connecting to backend ðŸ˜¢\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"0 auto\", padding: \"20px\" }}>\r\n      <ChatBox messages={messages} />\r\n      <div style={{ display: \"flex\", marginTop: \"15px\" }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your query...\"\r\n          style={{\r\n            padding: \"10px\",\r\n            flex: 1,\r\n            borderRadius: \"4px\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") sendMessage();\r\n          }}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          style={{\r\n            padding: \"10px 15px\",\r\n            marginLeft: \"10px\",\r\n            backgroundColor: \"#007bff\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"4px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}